var tools   = require("tools")
	, _proto  = tools.proto
	, _extend = tools.extend


module.exports = _proto({
	Worker : function (server, host, config) {
		this.server = server
		this.host	  = host
		this.config = config
	},
	"static extend" : function (proto) {
		// if ( typeof proto.init !== "function") {
		// 	throw new Error("Worker method 'init' should be a function")
		// }

		if ( typeof proto.run !== "function") {
			throw new Error("Worker method 'run' should be a function")
		}

		return tools.extendProto.call(this, proto)
	},
	createValue : function(string, values) {
		var varname, value
		for (var name in values) {
			varname = '%' + name + '%'
			value   = values[name]
			while(string.indexOf(varname) > 0) {
				string = string.replace(varname, value)
			}
		}

		return string
	},
	// Object destructor
	destroy : function () {
		for (var i in this) {
			this[i] = undefined
			delete this[i]
		}
	}
})
